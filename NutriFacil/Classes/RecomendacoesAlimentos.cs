using System;
using System.Collections.Generic;

public static class RecomendacoesAlimentos
{
    public static void ExibirRecomendacoes(TipoDieta dieta)
    {
        Console.WriteLine("üîç Recomenda√ß√µes Nutricionais Personalizadas:");
        Console.WriteLine($"Dieta selecionada: {dieta}\n");

        switch (dieta)
        {
            case TipoDieta.Mediterranea:
                ExibirDetalhes(
                    "Azeite de oliva, peixes, gr√£os integrais, legumes e frutas.",
                    new Dictionary<string, List<string>> {
                        { "Prote√≠nas", new() { "Peixe", "Frango", "Iogurte grego" } },
                        { "Legumes", new() { "Abobrinha", "Berinjela", "Cenoura" } },
                        { "Verduras", new() { "Alface", "Espinafre", "R√∫cula" } },
                        { "Carboidratos", new() { "Arroz integral", "Gr√£o-de-bico", "P√£o integral" } }
                    },
                    2000
                );
                break;

            case TipoDieta.LowCarb:
                ExibirDetalhes(
                    "Redu√ß√£o de carboidratos, foco em prote√≠nas e gorduras boas.",
                    new Dictionary<string, List<string>> {
                        { "Prote√≠nas", new() { "Carne magra", "Frango", "Ovos" } },
                        { "Legumes", new() { "Abobrinha", "Br√≥colis", "Couve-flor" } },
                        { "Verduras", new() { "Alface", "Agri√£o", "Espinafre" } },
                        { "Gorduras boas", new() { "Abacate", "Azeite de oliva", "Castanhas" } }
                    },
                    1800
                );
                break;

            case TipoDieta.Cetogenica:
                ExibirDetalhes(
                    "Muito baixa em carboidratos, rica em gordura. Foco em cetose.",
                    new Dictionary<string, List<string>> {
                        { "Gorduras boas", new() { "√ìleo de coco", "Azeite", "Abacate" } },
                        { "Prote√≠nas moderadas", new() { "Frango", "Peixe", "Ovos" } },
                        { "Legumes", new() { "Couve-flor", "Abobrinha", "Espinafre" } }
                    },
                    1600
                );
                break;

            case TipoDieta.Vegetariana:
                ExibirDetalhes(
                    "Sem carnes, inclui vegetais, gr√£os, ovos e latic√≠nios.",
                    new Dictionary<string, List<string>> {
                        { "Prote√≠nas", new() { "Ovos", "Tofu", "Lentilha" } },
                        { "Legumes", new() { "Beterraba", "Cenoura", "Ab√≥bora" } },
                        { "Verduras", new() { "Couve", "Espinafre", "R√∫cula" } },
                        { "Carboidratos", new() { "Arroz integral", "Quinoa", "Batata-doce" } }
                    },
                    1900
                );
                break;
        }
    }

    private static void ExibirDetalhes(string descricao, Dictionary<string, List<string>> grupos, int caloriasMedia)
    {
        Console.WriteLine($"üìù Descri√ß√£o: {descricao}");
        Console.WriteLine($"üî• Calorias di√°rias m√©dias recomendadas: ~{caloriasMedia} kcal");

        foreach (var grupo in grupos)
        {
            Console.WriteLine($"\nüçΩ {grupo.Key}:");
            foreach (var alimento in grupo.Value)
            {
                Console.WriteLine($"  - {alimento}");
            }
        }

        Console.WriteLine("\nüìå Dica: Consuma de forma equilibrada. Beba bastante √°gua e adapte conforme seu objetivo e restri√ß√µes!");
¬†¬†¬†¬†}
}
